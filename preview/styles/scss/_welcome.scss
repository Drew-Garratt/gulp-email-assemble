.welcome-view {

  &, body {
    height: 100%;
  }
  body {
    color: #666;
    font: normal 16px/1.4 Helvetica,Arial,Sans-serif;
  }
  h1 {
    color: #333;
    font-size: 24px;
    margin: 20px 0 10px 0;
    padding: 0;
  }
  p {
    margin: 0;
    padding: 0;
  }
  .wrapper {
    display: table;
    height: 100%;
    min-height: 100%;
    width: 100%;
  }
  .wrapper--inner {
    display: table-cell;
    text-align: center;
    vertical-align: middle;
  }
  .animation {
    height: 70px;
    position: relative;
  }
}

$edge: 4em;
$n-hex: 6;
$angle: 360deg/$n-hex;
$skew-angle: 90deg - $angle;
$n-per-edge: 3;
$n-tri: $n-hex*$n-per-edge;
$h-tri: $edge*cos(.5*$angle);
$t: 2s;
$scaling-duration: 80%;
$pad-duration: 5%;
$rp: 100% - $scaling-duration - $pad-duration;

.assembly {
	filter: drop-shadow(0 0 1px currentColor);
	animation: down $t linear infinite;
}

@keyframes down { to { transform: scale(.5); } }

.hex {
	z-index: -1;
	margin: -$edge;
	width: 2*$edge; height: 2*$edge;
	transform: skewY($skew-angle) 
		scaleX(cos($skew-angle));
	background: linear-gradient(135deg, 
		  transparent 25%, currentColor 0, 
		  currentColor 75%, transparent 0
	  );
}

.tri {	
	&:before {
		margin: 0 (-.5*$edge);
		border: solid 0;
		border-color: currentColor transparent;
		border-width: $h-tri .5*$edge 0;
		animation: up $t ease-out infinite;
		content: '';
	}
	
	@for $i from 0 to $n-hex {
		@for $j from 0 to $n-per-edge {
			$idx: $i*$n-per-edge + $j + 1;
			$f: $j%2;
			$p: $idx/($n-tri - 1)*$rp + $pad-duration;
			
			&:nth-child(#{$idx}) {
				transform: rotate(-($i - .5)*$angle) 
					translateY($h-tri) 
					if($j == 0, (), 
						translate($j*.5*$edge, $f*$h-tri) 
						rotate($f*.5turn)
					);
					
				&:before { animation-name: up-#{$idx}; }
			}
			
			@at-root {
				@keyframes up-#{$idx} {
					0%, #{$p} { transform: scale(0); }
					100%, #{$p + $scaling-duration} {
						transform: scale(1);
					}
				}
			}
		}
	}
}
